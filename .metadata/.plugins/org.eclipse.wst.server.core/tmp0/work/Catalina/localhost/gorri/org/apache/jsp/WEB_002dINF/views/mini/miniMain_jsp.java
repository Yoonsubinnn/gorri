/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-05-13 03:14:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.mini;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class miniMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/mini/../common/footer.jsp", Long.valueOf(1683370104804L));
    _jspx_dependants.put("/WEB-INF/views/mini/minihome-nav.jsp", Long.valueOf(1683947039205L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("   <!-- Required meta tags -->\r\n");
      out.write("   <meta charset=\"UTF-8\">\r\n");
      out.write("   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("   <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css\"> <!-- 폰트 아이콘 사용할수있게 -->\r\n");
      out.write("\r\n");
      out.write("   <!-- Bootstrap CSS -->\r\n");
      out.write("   <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("   <title>Gorri</title>\r\n");
      out.write("<style>\r\n");
      out.write("	\r\n");
      out.write("	/* 주황 테두리 부분 */\r\n");
      out.write("	.border-line{\r\n");
      out.write("		border : 2px solid #ffaa00; width : 1200px; \r\n");
      out.write("		margin-top: 100px;\r\n");
      out.write("		margin-left:auto; margin-right:auto;\r\n");
      out.write("		border-radius: 30px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	/* 썸네일 부분 */\r\n");
      out.write("	.bottom{width: 100%; \r\n");
      out.write("		display: flex; \r\n");
      out.write("		justify-content: center;\r\n");
      out.write("		align-items : center;\r\n");
      out.write("		\r\n");
      out.write("		}\r\n");
      out.write("	.myhome-menu{\r\n");
      out.write("		width: 1030px;\r\n");
      out.write("		display: flex; \r\n");
      out.write("		flex-wrap: wrap;\r\n");
      out.write("		margin-left: 0 auto; margin-right: 0 auto;\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("	.thum{\r\n");
      out.write("		position: relative; dicplay: block; width: 200px; height: 200px; \r\n");
      out.write("		margin-left: 3px; margin-right: 3px; margin-bottom: 6px; overflow : hidden}\r\n");
      out.write("	.thumb-img{width:200px; height:200px; margin-bottom: 4px;}\r\n");
      out.write("	.thum:hover .thumb-img{transform: scale(1.2, 1.2);}\r\n");
      out.write("	\r\n");
      out.write("	em{ /* 마우스 올렸을때 나오는 글자부분...*/\r\n");
      out.write("		width: 100%; height: 100%;\r\n");
      out.write("		display:none; position:absolute;\r\n");
      out.write("		left:0; top:0px;\r\n");
      out.write("		background: rgba(0, 0, 0, .5); color: #eee;\r\n");
      out.write("		text-align: center; padding-top: 45%; font-weight: bold;\r\n");
      out.write("		}\r\n");
      out.write("	.thum:hover em{display: block;}\r\n");
      out.write("	\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/top.jsp", out, false);
      out.write("\r\n");
      out.write("	<br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   <!-- Option 2: Separate Popper and Bootstrap JS -->\r\n");
      out.write("   <!--\r\n");
      out.write("   <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js\" integrity=\"sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("   <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js\" integrity=\"sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("   -->\r\n");
      out.write("   \r\n");
      out.write("   <div class=\"border-line\"> <!-- 겉에 주황색 테두리 -->\r\n");
      out.write("   \r\n");
      out.write(" 		");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css\"> <!-- 폰트 아이콘 사용할수있게 -->\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("	\r\n");
      out.write("		\r\n");
      out.write("	/* top - 프로필 사진 동그라미 부분*/\r\n");
      out.write("	.top-profile-img{\r\n");
      out.write("		position:relative;\r\n");
      out.write("		display: flex; \r\n");
      out.write("		justify-content: center;\r\n");
      out.write("		margin-top: -75px;\r\n");
      out.write("		margin-bottom: 150px;}\r\n");
      out.write("	#profile-back{ /* 맨뒤에 주황*/\r\n");
      out.write("		width: 150px; height: 75px;\r\n");
      out.write("		background: #ffaa00;\r\n");
      out.write("		border-radius: 75px 75px 0 0;\r\n");
      out.write("		position: absolute;\r\n");
      out.write("		}\r\n");
      out.write("	#profile-white{ /* 가운데 흰색 */\r\n");
      out.write("		width: 146px; height:146px;\r\n");
      out.write("		background: white;\r\n");
      out.write("		border-radius: 50%;\r\n");
      out.write("		position: absolute;\r\n");
      out.write("		margin-top: 1.5px;\r\n");
      out.write("		}\r\n");
      out.write("	#profile{width: 130px; height: 130px;\r\n");
      out.write("		position: absolute;\r\n");
      out.write("		margin-top: 8.5px;\r\n");
      out.write("		}\r\n");
      out.write("	#profile-img{width: 100%; height: 100%; \r\n");
      out.write("		border-radius: 50%;\r\n");
      out.write("		object-fit: cover;\r\n");
      out.write("		object-position: center;\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	/* 닉네임, 간단소개 태그 부분 */\r\n");
      out.write("	.mid-width{width: 80%; margin-bottom: 20px;}\r\n");
      out.write("	.mid-info{\r\n");
      out.write("		display: flex; \r\n");
      out.write("		justify-content: center;\r\n");
      out.write("		align-items : center;\r\n");
      out.write("		margin-bottom: 10px;	\r\n");
      out.write("		}\r\n");
      out.write("	#id{ /*닉네임*/\r\n");
      out.write("		text-align: center; font-weight: bold;\r\n");
      out.write("		display: flex; \r\n");
      out.write("		justify-content: center;\r\n");
      out.write("		align-items : center;\r\n");
      out.write("		margin-right: 5px;\r\n");
      out.write("		}\r\n");
      out.write("	#edit-icon{width: 15px; height: 15px; cursor: pointer; transition: all 0.3s ease 0s;} /*프로필 수정 아이콘*/\r\n");
      out.write("	#edit-icon:hover{\r\n");
      out.write("		color: #ffaa00; background: white;\r\n");
      out.write("		cursor: pointer; \r\n");
      out.write("		transform: translateY(-7px);\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("	/* 마이홈 메뉴관련 - 게시글, 모임, 구매내역 */\r\n");
      out.write("	.minihome{\r\n");
      out.write("		display: flex; \r\n");
      out.write("		justify-content: center;\r\n");
      out.write("		align-items : center;\r\n");
      out.write("		}\r\n");
      out.write("	.minihome-btn-width{width: 80%;\r\n");
      out.write("		display: flex; \r\n");
      out.write("		justify-content: center;\r\n");
      out.write("		align-items : center;\r\n");
      out.write("		}\r\n");
      out.write("	.empty{width: 10%; text-align: right;}\r\n");
      out.write("	\r\n");
      out.write("	.footer{\r\n");
      out.write("		display: flex; \r\n");
      out.write("		justify-content: center;\r\n");
      out.write("		align-items : center;\r\n");
      out.write("		margin-top: 10px; margin-bottom: 30px;\r\n");
      out.write("		padding-top: 20px;\r\n");
      out.write("		border-top: 1px solid lightgray;\r\n");
      out.write("		}\r\n");
      out.write("	.button {\r\n");
      out.write("	  width: 100px; height: 45px;\r\n");
      out.write("	  font-family: ;\r\n");
      out.write("	  font-size: 13px;\r\n");
      out.write("	  letter-spacing: 2.5px;\r\n");
      out.write("	  font-weight: 500;\r\n");
      out.write("	  color: #000;\r\n");
      out.write("	  background-color: #fff;\r\n");
      out.write("	  border: none;\r\n");
      out.write("	  border-radius: 45px;\r\n");
      out.write("	  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\n");
      out.write("	  transition: all 0.3s ease 0s;\r\n");
      out.write("	  cursor: pointer;\r\n");
      out.write("	  outline: none;\r\n");
      out.write("	  margin: 5px;\r\n");
      out.write("	  }\r\n");
      out.write("	.button:hover {\r\n");
      out.write("		background-color: #ffaa00;\r\n");
      out.write("		box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\n");
      out.write("		color: #fff;\r\n");
      out.write("		transform: translateY(-7px);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.select{background: black; color: white;} /* 현재 선택된 버튼 -> 현재 선택된페이지는 버튼색깔 다르게 해줘야 함요!!*/ \r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	/* 글쓰기 버튼 */\r\n");
      out.write("	.bi-pencil-square{font-size: 20px;  transition: all 0.3s ease 0s;}\r\n");
      out.write("	.bi-pencil-square:hover{\r\n");
      out.write("		color: #ffaa00; background: white;\r\n");
      out.write("		cursor: pointer; \r\n");
      out.write("		transform: translateY(-7px);}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	/* 중간 줄*/\r\n");
      out.write("	.mid-line{\r\n");
      out.write("		border : 1px solid gray; width: 90%;\r\n");
      out.write("		margin-left:auto; margin-right:auto; margin-top: 20px; margin-bottom: 20px;}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	/* 프로필 수정 창 */\r\n");
      out.write("	.modal-body{margin-left:auto; margin-right:auto;}\r\n");
      out.write("	.edit{margin: 0 auto; text-align: center;}\r\n");
      out.write("	textarea{resize: none; width: 400px; height: 100px;} /* resize: none;이 여기선 왜 적용 안됨??*/\r\n");
      out.write("	#edit-img{width: 130px; height:130px; /* 프로필 이미지 */\r\n");
      out.write("		margin-left:auto; margin-right:auto;;\r\n");
      out.write("		border-radius: 50%;\r\n");
      out.write("		background-image: url('assets/no-img.png');\r\n");
      out.write("		background-repeat: no-repeat;\r\n");
      out.write("    	background-position: center;\r\n");
      out.write("    	background-size : 130px, 130px;\r\n");
      out.write("    	margin-bottom: 20px\r\n");
      out.write("		}\r\n");
      out.write("	.input-file-button{ /* 파일입력창 못생겨서 만든 가짜 입력버튼..*/\r\n");
      out.write("		border: 2.8px solid white; border-radius: 15px;\r\n");
      out.write("		background: #ffaa00; color: black;  cursor: pointer; font-size: 14px;\r\n");
      out.write("		padding-left: 4px; padding-right: 4px;\r\n");
      out.write("		margin-left: 95px; margin-top: 95px;}\r\n");
      out.write("	.input-file-button:hover{background: black; color: #ffaa00; font-size: 14px;}	\r\n");
      out.write("	#input-file{display: none;} /* 파일 버튼 안보이게.. */\r\n");
      out.write("	.modal-footer{text-align: center;}\r\n");
      out.write("	.modal-footer> .button{font-weight: bold;}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<!-- 프로필사진 관련 -->\r\n");
      out.write("	<div class=\"top-profile-img\"> \r\n");
      out.write("		<div id=\"profile-back\"></div>\r\n");
      out.write("		<div id=\"profile-white\"></div>\r\n");
      out.write("		<div id=\"profile\">\r\n");
      out.write("			<img id=\"profile-img\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/no-img.png\">\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<!-- 프로필 정보 관련 -->\r\n");
      out.write("	<div class=\"mid\">\r\n");
      out.write("	\r\n");
      out.write("		<!-- id, 자기소개 -->\r\n");
      out.write("		<div class=\"minihome\">\r\n");
      out.write("			<div class=\"mid-width\">\r\n");
      out.write("				<div class=\"mid-info\">\r\n");
      out.write("					<div id=\"id\">닉네임</div>\r\n");
      out.write("					<div><i class=\"bi bi-gear-fill\" id=\"edit-icon\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"></i></div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div> <!-- 칸 안늘어나게 하기위해서 크기 미리 정해놔야 할듯 -->\r\n");
      out.write("					<div>자기소개글이 여기에 출력됩니다~ 자기소개글을 올려보세요 내 이름은 최정흠 입니다. 최대 몇글자인지 정해놔야 할듯! 칸 고정? 아님 쓰는데로 늘어나게??</div>\r\n");
      out.write("				</div> \r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		<!-- 게세글, 모임, 구매내역 버튼 --> <!-- 선택된 버튼은 클래스에 select넣어야 선택된 상태일때 색 바뀜 -->\r\n");
      out.write("		<div class=\"minihome\">\r\n");
      out.write("			<div class=\"minihome-btn-width\">\r\n");
      out.write("				<div class=\"empty\"></div>\r\n");
      out.write("				<div><button class=\"button\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/miniMain.mi';\"><b>게시글</b></button></div>\r\n");
      out.write("				<div><button class=\"button\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/miniMoim.mi';\"><b>모임</b></button></div>\r\n");
      out.write("				<div><button class=\"button\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/miniBuy.mi';\"><b>구매내역</b></button></div>\r\n");
      out.write("				<div class=\"empty\"><a onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/miniBoard.mi';\"><i class=\"bi bi-pencil-square\"></i></a></div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"mid-line\"></div>	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<!-- Modal --> <!-- 프로필 수정 버튼 클릭하면 뜨는 프로필 수정페이지 -->\r\n");
      out.write("	<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("	  <div class=\"modal-dialog\">\r\n");
      out.write("	    <div class=\"modal-content\">\r\n");
      out.write("	      <div class=\"modal-header\">\r\n");
      out.write("	        <h5 class=\"modal-title\" id=\"exampleModalLabel\">프로필 수정</h5>\r\n");
      out.write("	        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("	      </div>\r\n");
      out.write("		    <div class=\"modal-body\">\r\n");
      out.write("		    	<table class=\"edit\">\r\n");
      out.write("		    		<tr>\r\n");
      out.write("		    			<td>\r\n");
      out.write("		    				<div id=\"edit-img\">\r\n");
      out.write("		    					<label class=\"input-file-button\" for=\"input-file\"><i class=\"bi bi-camera-fill\"></i></label>\r\n");
      out.write("		    					<input class=\"form-con\" type=\"file\" id=\"input-file\">\r\n");
      out.write("							</div>\r\n");
      out.write("		    			</td>\r\n");
      out.write("		    		</tr>\r\n");
      out.write("		    		<tr>\r\n");
      out.write("		    			<td>\r\n");
      out.write("		    				<textarea class=\"edit-text\" style=\"resize: none;\" placeholder=\"자기소개를 입력해주세요.\"></textarea>\r\n");
      out.write("		    			</td>\r\n");
      out.write("		    		</tr>\r\n");
      out.write("		    	</table>\r\n");
      out.write("			</div>\r\n");
      out.write("	      <div class=\"footer\">\r\n");
      out.write("	        <button type=\"button\" class=\"button\" data-bs-dismiss=\"modal\">취소</button>\r\n");
      out.write("	        <button type=\"button\" class=\"button\">저장</button>\r\n");
      out.write("	      </div>\r\n");
      out.write("	    </div>\r\n");
      out.write("	  </div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write(" <!-- 프로필사진, 닉넴, 자기소개글, 메뉴버튼 -->\r\n");
      out.write("	\r\n");
      out.write("		\r\n");
      out.write("		<!-- 미니홈 이미지 썸네일 부분 -->\r\n");
      out.write("		<div class=\"bottom\"> \r\n");
      out.write("			<div class=\"myhome-menu\">	\r\n");
      out.write("				<div class=\"thum\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/miniBoardContent.mi'\">\r\n");
      out.write("					<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/pic2.jpg\" class=\"thumb-img\">\r\n");
      out.write("					<em>제목이나 태그...</em>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"thum\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/miniBoardContent.mi'\">\r\n");
      out.write("					<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/pic2.jpg\" class=\"thumb-img\">\r\n");
      out.write("					<em>제목이나 태그...</em>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"thum\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/miniBoardContent.mi'\">\r\n");
      out.write("					<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/pic2.jpg\" class=\"thumb-img\">\r\n");
      out.write("					<em>제목이나 태그...</em>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"thum\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/miniBoardContent.mi'\">\r\n");
      out.write("					<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/pic2.jpg\" class=\"thumb-img\">\r\n");
      out.write("					<em>제목이나 태그...</em>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"thum\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/miniBoardContent.mi'\">\r\n");
      out.write("					<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/pic2.jpg\" class=\"thumb-img\">\r\n");
      out.write("					<em>제목이나 태그...</em>\r\n");
      out.write("				</div>\r\n");
      out.write("					<div class=\"thum\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/miniBoardContent.mi'\">\r\n");
      out.write("					<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/pic2.jpg\" class=\"thumb-img\">\r\n");
      out.write("					<em>제목이나 태그...</em>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"thum\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/miniBoardContent.mi'\">\r\n");
      out.write("					<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/pic2.jpg\" class=\"thumb-img\">\r\n");
      out.write("					<em>제목이나 태그...</em>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"thum\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/miniBoardContent.mi'\">\r\n");
      out.write("					<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/pic2.jpg\" class=\"thumb-img\">\r\n");
      out.write("					<em>제목이나 태그...</em>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"thum\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/miniBoardContent.mi'\">\r\n");
      out.write("					<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/pic2.jpg\" class=\"thumb-img\">\r\n");
      out.write("					<em>제목이나 태그...</em>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		</div>\r\n");
      out.write("		<br>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <!-- Required meta tags -->\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap CSS -->\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n");
      out.write("	 <script src=\"https://kit.fontawesome.com/243bcd4d8b.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	.footer-bg{background: rgba(255, 170, 0, 0.7); width: 100%;} /*헤더 색깔은 #FFAB00*/\r\n");
      out.write("	\r\n");
      out.write("	.text{color: white;}\r\n");
      out.write("	.logo{width: 200px;}\r\n");
      out.write("	\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("    <title>Gorri</title>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("\r\n");
      out.write("    <!-- Optional JavaScript; choose one of the two! -->\r\n");
      out.write("\r\n");
      out.write("    <!-- Option 1: Bootstrap Bundle with Popper -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Option 2: Separate Popper and Bootstrap JS -->\r\n");
      out.write("    <!--\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js\" integrity=\"sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js\" integrity=\"sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    -->\r\n");
      out.write("    <br><br>\r\n");
      out.write("<div class=\"footer-bg\">\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("	  <footer class=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4\">\r\n");
      out.write("	    <p class=\"col-md-4 mb-0 text\">&copy; 2023 Company, Inc</p>\r\n");
      out.write("	\r\n");
      out.write("	    <a href=\"/\" class=\"col-md-4 d-flex align-items-center justify-content-center\">\r\n");
      out.write("	      <img class=\"logo\" src=\"resources/assets/gorriLogo.png\">\r\n");
      out.write("	    </a>\r\n");
      out.write("	    \r\n");
      out.write("	    <ul class=\"nav col-md-4 justify-content-end\">\r\n");
      out.write("	      <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text\">Home</a></li>\r\n");
      out.write("	      <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text\"><i class=\"fa-brands fa-twitter\"></i></a></li>\r\n");
      out.write("	      <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text\"><i class=\"fa-brands fa-facebook\"></i></a></li>\r\n");
      out.write("	      <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text\"><i class=\"fa-brands fa-instagram\"></i></a></li>\r\n");
      out.write("	      <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text\">About</a></li>\r\n");
      out.write("	    </ul>\r\n");
      out.write("	  </footer>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

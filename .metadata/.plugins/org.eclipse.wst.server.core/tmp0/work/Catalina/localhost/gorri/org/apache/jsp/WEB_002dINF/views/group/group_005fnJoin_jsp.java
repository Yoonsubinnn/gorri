/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-05-13 02:35:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.group;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class group_005fnJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/WEB-INF/views/group/../common/top.jsp", Long.valueOf(1683957772183L));
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1683857980997L));
    _jspx_dependants.put("/WEB-INF/views/group/calendar2.jsp", Long.valueOf(1683372520462L));
    _jspx_dependants.put("jar:file:/C:/D/SemiProj/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/1_Gorri/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("/WEB-INF/views/group/../common/footer.jsp", Long.valueOf(1683370104804L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("	table{border-collapse: collapse; text-align: center;}\r\n");
      out.write("	tr{height: 40px; border-bottom: 1px solid lightgray;}\r\n");
      out.write("	.top{background-color:  rgba(250, 170, 0, 0.3);}\r\n");
      out.write("	.no{width: 80px;}\r\n");
      out.write("	.title{width: 500px;}\r\n");
      out.write("	.writer{width: 100px;}\r\n");
      out.write("	.date{width: 150px;}\r\n");
      out.write("	.count{width: 80px;}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   body {background:white;}\r\n");
      out.write("   #wrap {width:1000px; height:900px; margin:0 auto; color:gray; text-align:center;}\r\n");
      out.write("   #side {float: left; margin-right:200px; width:300px; height:600px; line-height:600px; background:pink; border-radius: 2em;}\r\n");
      out.write("   #tung {float:left; width:100px; height:600px; line-height:600px; background:white; } \r\n");
      out.write("   #contents {float: left; width: 600px; height:600px; line-height:600px; background:lightgray; border-radius: 2em;}\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   #left{ width:400px; height:600px;  margin:auto; background-color:pink;}\r\n");
      out.write("   #right{ width:500px; height:600px; margin-left:500px; background-color:gray; }\r\n");
      out.write(" 	#center{ width:100px; height:600px; margin:auto;}\r\n");
      out.write("/* 	.container {margin-right:400px;} */\r\n");
      out.write("	\r\n");
      out.write("/* 	<!-- 버튼 css --> */\r\n");
      out.write("\r\n");
      out.write(".button {\r\n");
      out.write("  width: 140px;\r\n");
      out.write("  height: 45px;\r\n");
      out.write("  font-family: 'Roboto', sans-serif;\r\n");
      out.write("  font-size: 11px;\r\n");
      out.write("  text-transform: uppercase;\r\n");
      out.write("  letter-spacing: 2.5px;\r\n");
      out.write("  font-weight: 500;\r\n");
      out.write("  color: #000;\r\n");
      out.write("  background-color: #fff;\r\n");
      out.write("  border: none;\r\n");
      out.write("  border-radius: 45px;\r\n");
      out.write("  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\n");
      out.write("  transition: all 0.3s ease 0s;\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("  outline: none;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write(".button:hover {\r\n");
      out.write("  background-color: #2EE59D;\r\n");
      out.write("  box-shadow: 0px 15px 20px rgba(46, 229, 157, 0.4);\r\n");
      out.write("  color: #fff;\r\n");
      out.write("  transform: translateY(-7px);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"utf-8\">\r\n");
      out.write("<!-- 	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> -->\r\n");
      out.write("	<title>Bootstrap demo</title>\r\n");
      out.write("	<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\" crossorigin=\"anonymous\">\r\n");
      out.write("	<link href=\"css/style.css\" rel=\"stylesheet\">\r\n");
      out.write("	<style>\r\n");
      out.write("		.bg{background-color: #FFAB00;}\r\n");
      out.write("		.navbar{height: 50px;}\r\n");
      out.write("		.image{height: 250px;}\r\n");
      out.write("		.mar{margin-left: 100px; margin-right: 100px;}\r\n");
      out.write("		.bo{border-top: 1px solid black; border-bottom: 1px solid black;}\r\n");
      out.write("		.a{font-weight: bold;}\r\n");
      out.write("	</style>\r\n");
      out.write("<script src=\"../js/jquery-3.6.4.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("<div class=\"navbar bg shadow-sm\">\r\n");
      out.write("   <div class=\"container\">\r\n");
      out.write("	     ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	  	");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("   </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"text-center\">\r\n");
      out.write("	<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/main.do\">\r\n");
      out.write("		<img src=\"resources/assets/gorriLogo.png\" class=\"rounded\" alt=\"...\">\r\n");
      out.write("	</a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"nav-scroller py-1 mb-2 mar\">\r\n");
      out.write("    <nav class=\"nav d-flex justify-content-around bo\">\r\n");
      out.write("      <div> </div>\r\n");
      out.write("      <a class=\"p-2 link-secondary text-decoration-none a\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/miniMain.mi\">미니홈</a>\r\n");
      out.write("      <a class=\"p-2 link-secondary text-decoration-none a\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/hobbyMain.hb\">취미</a>\r\n");
      out.write("      <a class=\"p-2 link-secondary text-decoration-none a\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/groupMain.gr\">모임</a>\r\n");
      out.write("      <a class=\"p-2 link-secondary text-decoration-none a\" href=\"#\">마켓</a>\r\n");
      out.write("      <a class=\"p-2 link-secondary text-decoration-none a\" href=\"#\">공지</a>\r\n");
      out.write("      <div> </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("</div>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\" integrity=\"sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js\" integrity=\"sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<br><br><br><h3 style=\"text-align:center\"><b>모임명</b></h3>\r\n");
      out.write("<hr style=\"border:solid 10px black; margin:auto; width:30%; border-width:2px;\"> <!-- 모임명 중앙 선 -->\r\n");
      out.write("<br><h6 style=\"text-align:center\">모임 한 줄 소개 여기에 표시</h6>\r\n");
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("	<table width=\"60%\" style=\"margin-top:200px; margin:auto; text-align:center; \"> <!--테이블 전체 크기와 중앙 정렬 -->\r\n");
      out.write("	    <tr>\r\n");
      out.write("        	<td>\r\n");
      out.write("        		<div style=\"border:3px solid #FFAA00; width:350px; height:600px; border-radius:2em;\" > <!-- 1번째 블럭 -->\r\n");
      out.write("	        		<div style=\"border:5px solid #FFAA00; border-radius:8em;  margin:auto; margin-top:30px; width:210px; height:210px; overflow:hidden\">\r\n");
      out.write("	        			<img src=\"resources/assets/face.png\" style=\"210px; height:210px;\"></div> <!-- 사진 블럭 -->\r\n");
      out.write("	        			<br>\r\n");
      out.write("	        		<div>\r\n");
      out.write("	        			<p>\r\n");
      out.write("	        			멤버(15)\r\n");
      out.write("	        				<div id=\"like\"; style=\"margin:0 auto; width:25px; height:25px;\"><img src=\"resources/assets/heart.png\" style=\"width:25px; height:25px; cursor:pointer; display:block;\">\r\n");
      out.write("	        				<p id=\"count\">230</p>\r\n");
      out.write("	        				</div> <!-- 좋아요 버튼 -->\r\n");
      out.write("	        			</p> \r\n");
      out.write("	        		</div>\r\n");
      out.write("	        		\r\n");
      out.write("	        		<br><p img src=\"\">카테고리 표시</p> <!-- 설정한 카테고리에 맞는 카테고리와 아이콘 보임 -->\r\n");
      out.write("	        		<div style=\"border-radius:2em; margin:0 auto; width:290px; height:100px; border:1px solid #FFAA00; padding:15px;\">여기는 행복한 모임입니다! 맛집도 가고 친목도 다지는 그런 모임 다들 들어오세요!</div> <!-- 모임 소개 글 --> \r\n");
      out.write("       	 			<br>\r\n");
      out.write("       	 			<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/groupJoin.gr\"><button class=\"button\" style=\"\"><b>가입하기</button></a>\r\n");
      out.write("					\r\n");
      out.write("       	 		</div> <!-- 1번째 블럭 끝  -->\r\n");
      out.write("       	 	</td> <!-- 1번째 블럭 끝 -->\r\n");
      out.write("       	 \r\n");
      out.write("	        <td><div style=\"background-color:white; width:100px; height:600px;\"></div></td> <!-- 2번째 블럭  -->\r\n");
      out.write("	        <td> <!-- 3번째 블럭 -->\r\n");
      out.write("	        	<div style=\" border:3px solid #FFAA00; position:relative; width:500px; height:600px; border-radius: 2em;\">\r\n");
      out.write("	        		<h4 style=\"text-align:center;\"><br>모임 일정 확인</h4><hr style=\"width:80%; margin:auto\"></p>\r\n");
      out.write("	        		<div style=\"transform:scale(0.6); position:absolute; margin:0 auto;\"><a href=\"calendar.jsp\" style=\"color:inherit; text-decoration: none;\">");
      out.write("\r\n");
      out.write("<script src=\"../js/jquery-3.6.4.min.js\"></script>\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>:: JavaScript 캘린더 ::</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("    a { color:pink;text-decoration:none; }\r\n");
      out.write("    .scriptCalendar { text-align:center; position: absolute; margin-top:-100px; margin-left:-50px; }\r\n");
      out.write("    .scriptCalendar > thead > tr > td { width:50px;height:50px; border-radius: 7px;}\r\n");
      out.write("    .scriptCalendar > thead > tr:first-child > td { font-weight:bold; }\r\n");
      out.write("    .scriptCalendar > thead > tr:last-child > td { background-color:#FFDC46; font-weight:bolder; color:black; }\r\n");
      out.write("    .scriptCalendar > tbody > tr > td { width:50px;height:50px;}\r\n");
      out.write("    .scriptCalendar > tbody > tr > td:hover {  font-size: 20px; font-weight:bolder; cursor: pointer;}\r\n");
      out.write("    .calendarBtn { cursor:pointer; } \r\n");
      out.write("    #schedule:hover{ transform: translateY(-7px);  transition: transform 0.1s ease; }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    /* 일정 1개 이상 표시 */\r\n");
      out.write("    .choiceDay {\r\n");
      out.write("	  ddisplay: flex;\r\n");
      out.write("	  justify-content: center;\r\n");
      out.write("	  align-items: center;\r\n");
      out.write("	  height: 50px;\r\n");
      out.write("	  background-color: #f5f5f5;\r\n");
      out.write("	  font-weight: bold;\r\n");
      out.write("	  position: relative;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("    .choiceDay.has-event::after {\r\n");
      out.write("	  background-image: radial-gradient(circle at center, transparent 8px, red 9px);\r\n");
      out.write("	  background-size: 100% 100%;\r\n");
      out.write("	  background-repeat: no-repeat;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.choiceDay.has-event::before {\r\n");
      out.write("	  content: \"\";\r\n");
      out.write("	  position: absolute;\r\n");
      out.write("	  width: 16px;\r\n");
      out.write("	  height: 16px;\r\n");
      out.write("	  background-color: red;\r\n");
      out.write("	  border-radius: 50%;\r\n");
      out.write("	  top: 80%;\r\n");
      out.write("	  left: 51%;\r\n");
      out.write("	  transform: translate(-50%, -50%);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("    /* 삭제 버튼 css */\r\n");
      out.write("    .deleteButton {\r\n");
      out.write("    	border-radius:30px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .deleteButton:hover {\r\n");
      out.write("     	transition: background-color 0.5s ease-in-out;\r\n");
      out.write("    	color:white;\r\n");
      out.write("    	background-color:black;\r\n");
      out.write("    }\r\n");
      out.write("    /*    <!-- 버튼 css --> */\r\n");
      out.write("	   .wrap {\r\n");
      out.write("	  height: 100%;\r\n");
      out.write("	  display: flex;\r\n");
      out.write("	  align-items: center;\r\n");
      out.write("	  justify-content: center;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.button {\r\n");
      out.write("	  width: 140px;\r\n");
      out.write("	  height: 45px;\r\n");
      out.write("	  font-family: 'Roboto', sans-serif;\r\n");
      out.write("	  font-size: 15px;\r\n");
      out.write("	  text-transform: uppercase;\r\n");
      out.write("	  letter-spacing: 2.5px;\r\n");
      out.write("	  font-weight: 500;\r\n");
      out.write("	  color: #000;\r\n");
      out.write("	  background-color: #fff;\r\n");
      out.write("	  border: 3px solid gold;\r\n");
      out.write("	  border-radius: 45px;\r\n");
      out.write("	  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\n");
      out.write("	  transition: all 0.3s ease 0s;\r\n");
      out.write("	  cursor: pointer;\r\n");
      out.write("	  outline: none;\r\n");
      out.write("	  }\r\n");
      out.write("	\r\n");
      out.write("	.button:hover {\r\n");
      out.write("	  background-color: gold;\r\n");
      out.write("	  box-shadow: 0px 15px 20px rgba(46, 229, 157, 0.4);\r\n");
      out.write("	  color: #fff;\r\n");
      out.write("	  transform: translateY(-7px);\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    document.addEventListener(\"DOMContentLoaded\", function() {\r\n");
      out.write("        buildCalendar();\r\n");
      out.write("        \r\n");
      out.write("        document.getElementById(\"btnPrevCalendar\").addEventListener(\"click\", function(event) {\r\n");
      out.write("            prevCalendar();\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        document.getElementById(\"nextNextCalendar\").addEventListener(\"click\", function(event) {\r\n");
      out.write("            nextCalendar();\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    var toDay = new Date(); // @param 전역 변수, 오늘 날짜 / 내 컴퓨터 로컬을 기준으로 toDay에 Date 객체를 넣어줌\r\n");
      out.write("    var nowDate = new Date();  // @param 전역 변수, 실제 오늘날짜 고정값\r\n");
      out.write("    \r\n");
      out.write("    /**\r\n");
      out.write("     * @brief   이전달 버튼 클릭시\r\n");
      out.write("     */\r\n");
      out.write("    function prevCalendar() {\r\n");
      out.write("        this.toDay = new Date(toDay.getFullYear(), toDay.getMonth() - 1, toDay.getDate());\r\n");
      out.write("        buildCalendar();    // @param 전월 캘린더 출력 요청\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /**\r\n");
      out.write("     * @brief   다음달 버튼 클릭시\r\n");
      out.write("     */\r\n");
      out.write("    function nextCalendar() {\r\n");
      out.write("        this.toDay = new Date(toDay.getFullYear(), toDay.getMonth() + 1, toDay.getDate());\r\n");
      out.write("        buildCalendar();    // @param 명월 캘린더 출력 요청\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /**\r\n");
      out.write("     * @brief   캘린더 오픈\r\n");
      out.write("     * @details 날짜 값을 받아 캘린더 폼을 생성하고, 날짜값을 채워넣는다.\r\n");
      out.write("     */\r\n");
      out.write("    function buildCalendar() {\r\n");
      out.write("\r\n");
      out.write("        let doMonth = new Date(toDay.getFullYear(), toDay.getMonth(), 1); //이번 달 첫 날짜 \r\n");
      out.write("        \r\n");
      out.write("        let lastDate = new Date(toDay.getFullYear(), toDay.getMonth() + 1, 0); //이번 달 마지막 날짜 \r\n");
      out.write("        \r\n");
      out.write("        let tbCalendar = document.querySelector(\".scriptCalendar > tbody\"); //tbody\r\n");
      out.write("        \r\n");
      out.write("        document.getElementById(\"calYear\").innerText = toDay.getFullYear();                       // @param YYYY월\r\n");
      out.write("        document.getElementById(\"calMonth\").innerText = autoLeftPad((toDay.getMonth() + 1), 2);   // @param MM월\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("        // @details 이전 캘린더의 출력결과가 남아있다면, 이전 캘린더를 삭제한다.\r\n");
      out.write("        while(tbCalendar.rows.length > 0) {\r\n");
      out.write("            tbCalendar.deleteRow(tbCalendar.rows.length - 1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // @param 첫번째 개행\r\n");
      out.write("        let row = tbCalendar.insertRow();\r\n");
      out.write("        // @param 날짜가 표기될 열의 증가값\r\n");
      out.write("        let dom = 1;\r\n");
      out.write("		\r\n");
      out.write("        // @details 시작일의 요일값( doMonth.getDay() ) + 해당월의 전체일( lastDate.getDate())을  더해준 값에서\r\n");
      out.write("        //               7로 나눈값을 올림( Math.ceil() )하고 다시 시작일의 요일값( doMonth.getDay() )을 빼준다.\r\n");
      out.write("        let daysLength = (Math.ceil((doMonth.getDay() + lastDate.getDate()) / 7) * 7) - doMonth.getDay();\r\n");
      out.write("\r\n");
      out.write("        // @param 달력 출력\r\n");
      out.write("        // @details 시작값은 1일을 직접 지정하고 요일값( doMonth.getDay() )를 빼서 마이너스( - )로 for문을 시작한다.\r\n");
      out.write("        for(let day = 1 - doMonth.getDay(); daysLength >= day; day++) {\r\n");
      out.write("\r\n");
      out.write("            let column = row.insertCell();\r\n");
      out.write("\r\n");
      out.write("            // @param 평일( 전월일과 익월일의 데이터 제외 )\r\n");
      out.write("            if(Math.sign(day) == 1 && lastDate.getDate() >= day) {\r\n");
      out.write("\r\n");
      out.write("                // @param 평일 날짜 데이터 삽입\r\n");
      out.write("                column.innerText = autoLeftPad(day, 2);\r\n");
      out.write("\r\n");
      out.write("                // @param 일요일인 경우\r\n");
      out.write("                if(dom % 7 == 1) {\r\n");
      out.write("                    column.style.color = \"#FF4D4D\";\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                // @param 토요일인 경우\r\n");
      out.write("                if(dom % 7 == 0) {\r\n");
      out.write("                    column.style.color = \"#4D4DFF\";\r\n");
      out.write("                    row = tbCalendar.insertRow();   // @param 토요일이 지나면 다시 가로 행을 한줄 추가한다.\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // @param 평일 전월일과 익월일의 데이터 날짜변경\r\n");
      out.write("            else {\r\n");
      out.write("                let exceptDay = new Date(doMonth.getFullYear(), doMonth.getMonth(), day);\r\n");
      out.write("                column.innerText = autoLeftPad(exceptDay.getDate(), 2);\r\n");
      out.write("                column.style.backgroundColor = \"#FFFFE6\";\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // @brief   전월, 명월 음영처리\r\n");
      out.write("            // @details 현재년과 선택 년도가 같은경우\r\n");
      out.write("            if(toDay.getFullYear() == nowDate.getFullYear()) {\r\n");
      out.write("\r\n");
      out.write("                // @details 현재월과 선택월이 같은경우\r\n");
      out.write("                if(toDay.getMonth() == nowDate.getMonth()) {\r\n");
      out.write("\r\n");
      out.write("                    // @details 현재일보다 이전인 경우이면서 현재월에 포함되는 일인경우\r\n");
      out.write("                    if(nowDate.getDate() > day && Math.sign(day) == 1) {\r\n");
      out.write("                        column.style.backgroundColor = \"#FFFFE6\";\r\n");
      out.write("                        column.style.cursor = \"pointer\";\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    // @details 현재일보다 이후이면서 현재월에 포함되는 일인경우\r\n");
      out.write("                    else if(nowDate.getDate() < day && lastDate.getDate() >= day) {\r\n");
      out.write("                        column.style.backgroundColor = \"#FFFFE6\";\r\n");
      out.write("                        column.style.cursor = \"pointer\";\r\n");
      out.write("                        column.onclick = function(){ calendarChoiceDay(this);}\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    // @details 현재일인 경우\r\n");
      out.write("                    else if(nowDate.getDate() == day) {\r\n");
      out.write("                        column.style.backgroundColor = \"#FFFFE6\";\r\n");
      out.write("                        column.style.cursor = \"pointer\";\r\n");
      out.write("                        column.onclick = function(){ calendarChoiceDay(this); }\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                // @details 현재월보다 이전인경우\r\n");
      out.write("                } else if(toDay.getMonth() < nowDate.getMonth()) {\r\n");
      out.write("                    if(Math.sign(day) == 1 && day <= lastDate.getDate()) {\r\n");
      out.write("                        column.style.backgroundColor = \"#FFFFE6\";\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                // @details 현재월보다 이후인경우\r\n");
      out.write("                else {\r\n");
      out.write("                    if(Math.sign(day) == 1 && day <= lastDate.getDate()) {\r\n");
      out.write("                        column.style.backgroundColor = \"#FFFFE6\";\r\n");
      out.write("                        column.style.cursor = \"pointer\";\r\n");
      out.write("                        column.onclick = function(){ calendarChoiceDay(this); }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // @details 선택한년도가 현재년도보다 작은경우\r\n");
      out.write("            else if(toDay.getFullYear() < nowDate.getFullYear()) {\r\n");
      out.write("                if(Math.sign(day) == 1 && day <= lastDate.getDate()) {\r\n");
      out.write("                    column.style.backgroundColor = \"#FFFFE6\";\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // @details 선택한년도가 현재년도보다 큰경우\r\n");
      out.write("            else {\r\n");
      out.write("                if(Math.sign(day) == 1 && day <= lastDate.getDate()) {\r\n");
      out.write("//                     column.style.backgroundColor = \"#FFFFFF\";\r\n");
      out.write("                    column.style.cursor = \"pointer\";\r\n");
      out.write("                    column.onclick = function(){ calendarChoiceDay(this); }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            dom++;\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /**blobk\r\n");
      out.write("    \r\n");
      out.write("     * @brief   날짜 선택\r\n");
      out.write("     * @details 사용자가 선택한 날짜에 체크표시를 남긴다.\r\n");
      out.write("     */\r\n");
      out.write("    function calendarChoiceDay(column) {\r\n");
      out.write("\r\n");
      out.write("        // @param 기존 선택일이 존재하는 경우 기존 선택일의 표시형식을 초기화 한다.\r\n");
      out.write("        if(document.getElementsByClassName(\"choiceDay\")[0]) {\r\n");
      out.write("            \r\n");
      out.write("            // @see 금일인 경우\r\n");
      out.write("            if(document.getElementById(\"calMonth\").innerText == autoLeftPad((nowDate.getMonth() + 1), 2) && document.getElementsByClassName(\"choiceDay\")[0].innerText == autoLeftPad(toDay.getDate(), 2)) {\r\n");
      out.write("                document.getElementsByClassName(\"choiceDay\")[0].style.backgroundColor = \"#FFAB00\";  \r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // @see 금일이 아닌 경우\r\n");
      out.write("            else { \r\n");
      out.write("                document.getElementsByClassName(\"choiceDay\")[0].style.backgroundColor = \"#FFFFE6\";\r\n");
      out.write("            	//체크 하지 않으면 다시 FFFFFF\r\n");
      out.write("            }\r\n");
      out.write("            document.getElementsByClassName(\"choiceDay\")[0].classList.remove(\"choiceDay\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // @param 선택일 체크 표시\r\n");
      out.write("        column.style.backgroundColor = \"#FFAB00\";\r\n");
      out.write("\r\n");
      out.write("        // @param 선택일 클래스명 변경\r\n");
      out.write("        column.classList.add(\"choiceDay\");\r\n");
      out.write("        \r\n");
      out.write("        this.addEventListener('click', function(event) {\r\n");
      out.write("        	document.getElementById('schedule').style.display = 'inline-block';\r\n");
      out.write("        	document.getElementById('scheduleToday').innerHTML = document.getElementById(\"calMonth\").innerText + '월' + document.getElementsByClassName(\"choiceDay\")[0].innerText + '일 일정';\r\n");
      out.write("        	\r\n");
      out.write("        	\r\n");
      out.write("        	event.target.classList.add('has-event'); //has-event생기면 표시 되도록 \r\n");
      out.write("        })\r\n");
      out.write("        \r\n");
      out.write("        // 만약 추가 된 일정이 1개 이상이라면 동그라미 표시 \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /**\r\n");
      out.write("     * @brief   숫자 두자릿수( 00 ) 변경\r\n");
      out.write("     * @details 자릿수가 한자리인 ( 1, 2, 3등 )의 값을 10, 11, 12등과 같은 두자리수 형식으로 맞추기위해 0을 붙인다.\r\n");
      out.write("     * @param   num     앞에 0을 붙일 숫자 값\r\n");
      out.write("     * @param   digit   글자의 자릿수를 지정 ( 2자릿수인 경우 00, 3자릿수인 경우 000 … )\r\n");
      out.write("     */\r\n");
      out.write("    function autoLeftPad(num, digit) {\r\n");
      out.write("        if(String(num).length < digit) {\r\n");
      out.write("            num = new Array(digit - String(num).length + 1).join(\"0\") + num;\r\n");
      out.write("        }\r\n");
      out.write("        return num;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div style=\"position:relative; padding : 100px; display : inline-block; margin:0 auto; text-align: center;\">\r\n");
      out.write("    <table class=\"scriptCalendar\" style=\" width: 600px; height:600px; \">\r\n");
      out.write("        <thead>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td class=\"calendarBtn\" id=\"btnPrevCalendar\" style=\"font-size:20px; font-weight:bold;\">&#60;&#60;</td>\r\n");
      out.write("                <td style=\"font-size:26px;\"colspan=\"5\">\r\n");
      out.write("                    <span id=\"calYear\">YYYY</span>년\r\n");
      out.write("                    <span id=\"calMonth\">MM</span>월\r\n");
      out.write("                </td>\r\n");
      out.write("                <td class=\"calendarBtn\" id=\"nextNextCalendar\" style=\"font-size:20px; font-weight:bold;\">&#62;&#62;</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>일</td><td>월</td><td>화</td><td>수</td><td>목</td><td>금</td><td>토</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody></tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("</a></div>\r\n");
      out.write("	        			\r\n");
      out.write("	        	</div>\r\n");
      out.write("	        	\r\n");
      out.write("	        </td>\r\n");
      out.write("	        </div>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	</table> <!-- 모임 소개, 달력 블럭 끝  -->\r\n");
      out.write("	\r\n");
      out.write("	<br><br><br>\r\n");
      out.write("	<table style=\"margin:0 auto;\">\r\n");
      out.write("	<tr class=\"top\">\r\n");
      out.write("		<th class=\"no\">번호</th>\r\n");
      out.write("		<th class=\"title\">제목</th>\r\n");
      out.write("		<th class=\"writer\">작성자</th>\r\n");
      out.write("		<th class=\"date\">작성일자</th>\r\n");
      out.write("		<th class=\"count\">조회수</th>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr style=\"border-bottom: 2px solid lightgray;\">\r\n");
      out.write("		<td>1</td>\r\n");
      out.write("		<td>제목1</td>\r\n");
      out.write("		<td>작성자1</td>\r\n");
      out.write("		<td>2023.00.00</td>\r\n");
      out.write("		<td>1</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr style=\"border-bottom: 2px solid lightgray;\">\r\n");
      out.write("		<td>2</td>\r\n");
      out.write("		<td>제목2</td>\r\n");
      out.write("		<td>작성자2</td>\r\n");
      out.write("		<td>2023.00.00</td>\r\n");
      out.write("		<td>2</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr style=\"border-bottom: 2px solid lightgray;\">\r\n");
      out.write("		<td>3</td>\r\n");
      out.write("		<td>제목3</td>\r\n");
      out.write("		<td>작성자3</td>\r\n");
      out.write("		<td>2023.00.00</td>\r\n");
      out.write("		<td>3</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr style=\"border-bottom: 2px solid lightgray;\">\r\n");
      out.write("		<td>4</td>\r\n");
      out.write("		<td>제목4</td>\r\n");
      out.write("		<td>작성자4</td>\r\n");
      out.write("		<td>2023.00.00</td>\r\n");
      out.write("		<td>4</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr style=\"border-bottom: 2px solid lightgray;\">\r\n");
      out.write("		<td>5</td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr style=\"border-bottom: 2px solid lightgray;\">\r\n");
      out.write("		<td>6</td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr style=\"border-bottom: 2px solid lightgray;\">\r\n");
      out.write("		<td>7</td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr style=\"border-bottom: 2px solid lightgray;\">\r\n");
      out.write("		<td>8</td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr style=\"border-bottom: 2px solid lightgray;\">\r\n");
      out.write("		<td>9</td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr style=\"border-bottom: 2px solid lightgray;\">\r\n");
      out.write("		<td>10</td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("	<br><br><br><br><br><br>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <!-- Required meta tags -->\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap CSS -->\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n");
      out.write("	 <script src=\"https://kit.fontawesome.com/243bcd4d8b.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	.footer-bg{background: rgba(255, 170, 0, 0.7); width: 100%;} /*헤더 색깔은 #FFAB00*/\r\n");
      out.write("	\r\n");
      out.write("	.text{color: white;}\r\n");
      out.write("	.logo{width: 200px;}\r\n");
      out.write("	\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("    <title>Gorri</title>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("\r\n");
      out.write("    <!-- Optional JavaScript; choose one of the two! -->\r\n");
      out.write("\r\n");
      out.write("    <!-- Option 1: Bootstrap Bundle with Popper -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Option 2: Separate Popper and Bootstrap JS -->\r\n");
      out.write("    <!--\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js\" integrity=\"sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js\" integrity=\"sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    -->\r\n");
      out.write("    <br><br>\r\n");
      out.write("<div class=\"footer-bg\">\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("	  <footer class=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4\">\r\n");
      out.write("	    <p class=\"col-md-4 mb-0 text\">&copy; 2023 Company, Inc</p>\r\n");
      out.write("	\r\n");
      out.write("	    <a href=\"/\" class=\"col-md-4 d-flex align-items-center justify-content-center\">\r\n");
      out.write("	      <img class=\"logo\" src=\"resources/assets/gorriLogo.png\">\r\n");
      out.write("	    </a>\r\n");
      out.write("	    \r\n");
      out.write("	    <ul class=\"nav col-md-4 justify-content-end\">\r\n");
      out.write("	      <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text\">Home</a></li>\r\n");
      out.write("	      <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text\"><i class=\"fa-brands fa-twitter\"></i></a></li>\r\n");
      out.write("	      <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text\"><i class=\"fa-brands fa-facebook\"></i></a></li>\r\n");
      out.write("	      <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text\"><i class=\"fa-brands fa-instagram\"></i></a></li>\r\n");
      out.write("	      <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text\">About</a></li>\r\n");
      out.write("	    </ul>\r\n");
      out.write("	  </footer>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		let count = parseInt(document.getElementById('count').innerHTML); //현재 좋아요 숫자 \r\n");
      out.write("		\r\n");
      out.write("		const like = document.getElementById('like'); //좋아요 아이콘 (버튼 기능)\r\n");
      out.write("		let number = 0; //새롭게 누르게 될 좋아요 숫자 \r\n");
      out.write("		let result = 0;\r\n");
      out.write("		like.addEventListener('click', function() {\r\n");
      out.write("			console.log(count);\r\n");
      out.write("			number++; //클릭 할 때마다 증가 \r\n");
      out.write("			console.log(number%2); // 1 0 1 0 -> 1이면 증가 0이면 감소 \r\n");
      out.write("			if(number%2 == 1) {\r\n");
      out.write("				result = count+1\r\n");
      out.write("				console.log(result);\r\n");
      out.write("				} else {\r\n");
      out.write("				result = count\r\n");
      out.write("				console.log(result);\r\n");
      out.write("			}\r\n");
      out.write("			document.getElementById('count').innerHTML = result;	\r\n");
      out.write("		})\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("		document.getElementById(\"calUI\").addEventListener(\"click\", function() {\r\n");
      out.write("			  window.location.href = \"calendar.jsp\";\r\n");
      out.write("			});\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/group/../common/top.jsp(23,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/group/../common/top.jsp(23,0) '${ pageContext.servletContext.contextPath }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${ pageContext.servletContext.contextPath }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/group/../common/top.jsp(23,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/group/../common/top.jsp(23,0) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setScope("application");
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/group/../common/top.jsp(27,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ empty loginUser }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		     <nav class=\"d-inline-flex mt-md-0 ms-md-auto\">\r\n");
          out.write("		       <a class=\"me-3 py-2 text-white text-decoration-none\" href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/login.me\">로그인</a>\r\n");
          out.write("		       <a class=\"py-2 text-white text-decoration-none\" href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/join.me\">회원가입</a>\r\n");
          out.write("		     </nav>\r\n");
          out.write("		  ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/group/../common/top.jsp(33,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ !empty loginUser }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("   \r\n");
          out.write("				  	\r\n");
          out.write("	     <nav class=\"d-inline-flex mt-md-0 ms-md-auto\">\r\n");
          out.write("	     	   <a class=\"me-3 py-2 text-white text-decoration-none\" style=\"color:lightgrey\" disabled >");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ loginUser.userId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("님</a>\r\n");
          out.write("		       <a class=\"me-3 py-2 text-white text-decoration-none\" href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/logout.me\">로그아웃</a>\r\n");
          out.write("		       <a class=\"py-2 text-white text-decoration-none\" href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/updateMyInfo.me\">내정보수정</a>\r\n");
          out.write("		       ");
          if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fif_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("	     </nav>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
      // /WEB-INF/views/group/../common/top.jsp(39,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ loginUser.isAdmin eq 'Y' }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		       &nbsp; &nbsp; <a class=\"py-2 text-white text-decoration-none\" href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/adminDash.ad\">관리자페이지</a>\r\n");
          out.write("		       ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }
}
